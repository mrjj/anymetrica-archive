# CURRENTLY NOT USED
#
# A simple example. See reference.yml for explanation for explanation of all options.
#
#  auth:
#    token:
#      realm: "https://127.0.0.1:5001/auth"
#      service: "Docker registry"
#      issuer: "Acme auth server"
#      rootcertbundle: "/path/to/server.pem"

server:
  addr: ":5001"
  certificate: "/etc/certs/server.pem"
  key: "/etc/certs/server.key"

token:
  issuer: "Project auth server"  # Must match issuer in the Registry config.
  expiration: 900

users:
  # Password is specified as a BCrypt hash. Use `htpasswd -nB USERNAME` to generate and `openssl rand -base64 18` to easy generate unique password.
  "admin@project.com":
    password: admin@project.com:$2y$05$s/WXFM80he2/.SdIzZZK8.M8Owok2x5ijRnyPKaj3x.Kce99lwGgC"
  "service@project.com":
    password: "service@project.com:$2y$05$v1ysuk0gXVc9Ia1kdKchoeAulpSLEyaoMZMWymH.GFwMYLzpePfuO"
  "deploy@project.com":
    password: "deploy@project.com:$2y$05$2TFXAZQRzYxsd.gTcY8YXOPaUlr8HMSRRIKp2/MYy9jk43ozq8r8u"

acl:
  - match: {account: "admin@project.com"}
    actions: ["*"]
    comment: "I has full access to everything."
  - match: {account: "service@project.com"}
    actions: ["pull", "push"]
    comment: "Service build"
  - match: {account: "deploy@project.com"}
    actions: ["pull"]
    comment: "Service deployment"

## Google authentication.
## ==! NB: DO NOT ENTER YOUR GOOGLE PASSWORD AT "docker login". IT WILL NOT WORK.
## Instead, Auth server maintains a database of Google authentication tokens.
## Go to the server's port as HTTPS with your browser and follow the "Login with Google account" link.
## Once signed in, you will get a throw-away password which you can use for Docker login.
#google_auth:
#  domain: "example.com"  # Optional. If set, only logins from this domain are accepted.
#  # client_id and client_secret for API access. Required.
#  # Follow instructions here: https://developers.google.com/identity/sign-in/web/devconsole-project
#  # NB: Make sure JavaScript origins are configured correctly, and that third-party
#  # cookies are not blocked in the browser being used to login.
#  client_id: "1223123456-somethingsomething.apps.googleusercontent.com"
#  # Either client_secret or client_secret_file is required. Use client_secret_file if you don't
#  # want to have sensitive information checked in.
#  # client_secret: "verysecret"
#  client_secret_file: "/path/to/client_secret.txt"
#  # Where to store server tokens. Required.
#  token_db: "/somewhere/to/put/google_tokens.ldb"
#  # How long to wait when talking to Google servers. Optional.
#  http_timeout: 10
