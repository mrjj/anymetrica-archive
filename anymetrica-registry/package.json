{
  "name": "anymetrica-registry",
  "description": "Anymetrica Registry - Core web service",
  "version": "0.6.22",
  "main": "lib/index.js",
  "module": "src/server/index.js",
  "author": {
    "name": "Ilya Kutukov",
    "email": "post.ilya@gmail.com"
  },
  "files": [
    "src/",
    "config.production.json",
    "config.development.json",
    "lib/",
    "!__mocks__",
    "!__tests__"
  ],
  "license": "SEE LICENSE IN LICENCE.md",
  "scripts": {
    "test:recognition": "node ./src/recognize.js ./data/myamlim_2.0.mp3",
    "start:server": "nodemon -e js index.js --server",
    "start:proxy": "nodemon -e js index.js --proxy",
    "test": "yarn run test:clean && yarn run test:agens:run && (concurrently --success first --kill-others 'yarn run start:server' 'yarn run start:proxy' 'sleep 1 && yarn run test:jest')",
    "test:jest": "rm -f ./test-server-lock.pid ; export AGENS_PORTw7432; jest --forceExit --detectOpenHandles --runInBand",
    "test:mongo:run": "                        docker run --rm -d    -p 28017:27017            -v anymetrica-mongo-test-volume:/data/db -e 'MONGO_INITDB_ROOT_USERNAME=anymetrica-registry' -e 'MONGO_INITDB_ROOT_PASSWORD=anymetrica-registry'         --name anymetrica-mongo-test mongo:4.0.6",
    "test:agens:run": "export AGENS_PORT=8432; docker run --rm -d -i -p 8432:5432/tcp -v anymetrica-agens-test-volume:/home/agens/AgensGraph/data --name anymetrica-agens-test bitnine/agensgraph:v2.1.0 /bin/bash",
    "test:run": "npm run test:agens:run && npm run test:mongo:run",
    "test:mongo:stop": "if [[ ! -z $(docker ps -a | grep anymetrica-mongo-test) ]] ; then docker stop anymetrica-mongo-test ; fi",
    "test:agens:stop": "if [[ ! -z $(docker ps -a | grep anymetrica-agens-test) ]] ; then docker stop anymetrica-agens-test ; fi",
    "test:stop": "npm run test:agens:stop && npm run test:mongo:stop",
    "test:mongo:clean": "npm run test:mongo:stop && if [[ ! -z $(docker ps -a | grep anymetrica-mongo-test) ]] ; then docker rm --volumes -f anymetrica-mongo-test && sleep 1 ; fi &&  if [[ ! -z $(docker volume ls | grep anymetrica-mongo-test-volume) ]] ; then docker volume rm anymetrica-mongo-test-volume && echo 'test mongo DB Cleaned' ; fi",
    "test:agens:clean": "npm run test:agens:stop && if [[ ! -z $(docker ps -a | grep anymetrica-agens-test) ]] ; then docker rm --volumes -f anymetrica-agens-test && sleep 1 ; fi && if [[ ! -z $(docker volume ls | grep anymetrica-agens-test-volume) ]] ; then docker volume rm anymetrica-agens-test-volume && echo 'test DB Cleaned' ; fi",
    "test:clean": "npm run test:agens:clean && npm run test:mongo:clean",
    "dev": "yarn run build:lib ; export NODE_ENV=development ; yarn run dev:stop ; yarn run dev:run && (concurrently --success first --kill-others 'sleep 16; yarn run watch' './scripts/wait-for.sh 0.0.0.0:7432 -t 10 && yarn run start:server' 'yarn run start:proxy') && yarn run dev:stop",
    "dev:mongo:run": "                        docker run --rm -d    -p 27017:27017            -v anymetrica-mongo-dev-volume:/data/db                    --name anymetrica-mongo-dev mongo:4.0.6",
    "dev:agens:run": "export AGENS_PORT=7432; docker run --rm -d -i -p ${AGENS_PORT}:5432/tcp -v anymetrica-agens-dev-volume:/home/agens/AgensGraph/data --name anymetrica-agens-dev bitnine/agensgraph:v2.1.0 /bin/bash",
    "dev:run": "npm run dev:agens:run && npm run dev:mongo:run",
    "dev:mongo:stop": "if [[ ! -z $(docker ps -a | grep anymetrica-mongo-dev) ]] ; then docker stop anymetrica-mongo-dev ; fi",
    "dev:agens:stop": "if [[ ! -z $(docker ps -a | grep anymetrica-agens-dev) ]] ; then docker stop anymetrica-agens-dev ; fi",
    "dev:stop": "npm run dev:agens:stop && npm run dev:mongo:stop",
    "dev:mongo:clean": "npm run dev:mongo:stop && if [[ ! -z $(docker ps -a | grep anymetrica-mongo-dev) ]] ; then docker rm --volumes -f anymetrica-mongo-dev && sleep 1 ; fi &&  if [[ ! -z $(docker volume ls | grep anymetrica-mongo-dev-volume) ]] ; then docker volume rm anymetrica-mongo-dev-volume && echo 'Dev mongo DB Cleaned' ; fi",
    "dev:agens:clean": "npm run dev:agens:stop && if [[ ! -z $(docker ps -a | grep anymetrica-agens-dev) ]] ; then docker rm --volumes -f anymetrica-agens-dev && sleep 1 ; fi && if [[ ! -z $(docker volume ls | grep anymetrica-agens-dev-volume) ]] ; then docker volume rm anymetrica-agens-dev-volume && echo 'Dev DB Cleaned' ; fi",
    "dev:clean": "npm run dev:agens:clean && npm run dev:mongo:clean",
    "start": "yarn run start:server",
    "clean": "yarn run build:clean && yarn run clean:cache",
    "clean:all": "yarn run build:clean && yarn run clean:cache && yarn run clean:locks && yarn run clean:libs",
    "clean:cache": "npm cache clean --force && if [[ $(command -v yarn) ]] ; then yarn cache clean ; fi",
    "clean:locks": "rm -f ./package-lock.json && rm -f ./yarn.lock",
    "clean:libs": "rm -rf ./node_modules",
    "clean:postgre_pid": "rm -f /usr/local/var/postgres/postmaster.pid",
    "build": "yarn run build:clean && ./node_modules/.bin/webpack --ignore  '**/__tests__/**' --config ./webpack.production.config.js",
    "build:clean": "rm -rf ./lib",
    "build:babel": "babel ./src --ignore '**/__tests__/**' --out-dir ./lib",
    "prepublishOnly": "yarn run build",
    "watch": "./node_modules/.bin/webpack --config ./webpack.development.config.js --watch",
    "flow": "flow check ./src",
    "lint": "eslint ./src",
    "lint:fix": "eslint . --fix",
    "ci": "yarn run build && yarn run lint && yarn run flow"
  },
  "dependencies": {
    "@ffmpeg-installer/ffmpeg": "1.0.17",
    "@google-cloud/speech": "2.3.0",
    "@grpc/proto-loader": "0.4.0",
    "@phc/format": "0.5.0",
    "node-vad": "1.1.2",
    "@sendgrid/mail": "6.3.1",
    "agensgraph": "mrjj/agensgraph-nodejs",
    "anymetrica-api": "../anymetrica-api",
    "anymetrica-utils": "../anymetrica-utils",
    "babel-polyfill": "6.26.0",
    "babel-register": "6.26.0",
    "concurrently": "4.1.0",
    "execa": "1.0.0",
    "fluent-ffmpeg": "2.1.2",
    "grpc": "1.19.0",
    "lodash.defaults": "4.2.0",
    "lodash.difference": "4.5.0",
    "lodash.frompairs": "4.0.1",
    "lodash.intersection": "4.4.0",
    "lodash.sortby": "4.7.0",
    "mongodb": "3.1.13",
    "node-record-lpcm16": "^0.3.1",
    "nodemon": "1.18.10",
    "pegjs": "0.10.0",
    "protobufjs": "6.8.8",
    "shelljs": "0.8.3",
    "typedarray": "0.0.6",
    "uuid": "3.3.2"
  },
  "devDependencies": {
    "babel-core": "6.26.3",
    "babel-jest": "23.6.0",
    "babel-preset-env": "1.7.0",
    "jest": "24.1.0",
    "babel-cli": "6.26.0",
    "babel-eslint": "10.0.1",
    "babel-plugin-external-helpers": "6.22.0",
    "babel-plugin-rewire": "1.2.0",
    "babel-plugin-transform-async-to-generator": "6.24.1",
    "babel-plugin-transform-class-properties": "6.24.1",
    "babel-plugin-transform-flow-comments": "6.22.0",
    "babel-plugin-transform-object-rest-spread": "6.26.0",
    "babel-plugin-transform-runtime": "6.23.0",
    "copy-webpack-plugin": "4.6.0",
    "eslint": "5.12.1",
    "eslint-config-airbnb-base": "13.1.0",
    "eslint-plugin-flowtype": "2.50.3",
    "eslint-plugin-import": "2.14.0",
    "eslint-plugin-jest": "22.1.3",
    "express": "latest",
    "flow-bin": "0.94.0",
    "flow-copy-source": "2.0.2",
    "http-proxy-middleware": "latest",
    "pem": "1.13.2",
    "remove-flow-types-loader": "1.1.0",
    "webpack-node-externals": "1.7.2",
    "websocket": "1.0.28",
    "webpack": "4.29.4",
    "webpack-cli": "3.2.3",
    "ws": "6.1.3"
  }
}
