/* @flow */
const jwt = require('jsonwebtoken');

module.exports = (bearerHeader) => {
  return new Promise(((resolve, reject) => {
    let bearerToken;

    if (typeof bearerHeader !== 'undefined') {
      const bearer = bearerHeader.split(' ');
      // eslint-disable-next-line prefer-destructuring
      bearerToken = bearer[1];

      jwt.verify(bearerToken, process.env.JWT_SECRET, (err, decoded) => {
        if (err) {
          reject(err);
        }

        resolve(decoded);
      });
    } else {
      reject('No authorization bearer token was found or the token was formatted improperly.');
    }
  }));
};
